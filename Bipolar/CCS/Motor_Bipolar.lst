CCS PCM C Compiler, Version 5.008, 5967               18-feb-15 15:36

               Filename:   C:\Users\santi19z\Desktop\Step Motor\Motor_Bipolar.lst

               ROM used:   156 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPUT,NOPROTECT 
.................... #use standard_io(b) 
.................... #use delay(clock=4M)//especifica los 4Mhz del cristal de cuarzo 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... //int t; 
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................    set_tris_a(00111); 
0024:  MOVLW  49
0025:  MOVWF  05
....................    set_tris_b(00000000); 
0026:  MOVLW  00
0027:  MOVWF  06
.................... //t=10000; 
....................  
.................... do{ 
....................           
....................    if(input(PIN_A0)==1)              
0028:  BSF    05.0
0029:  BCF    03.5
002A:  BTFSS  05.0
002B:  GOTO   089
....................      {                                      
....................       output_high(pin_b0); 
002C:  BSF    03.5
002D:  BCF    06.0
002E:  BCF    03.5
002F:  BSF    06.0
....................       output_low(pin_b1);  
0030:  BSF    03.5
0031:  BCF    06.1
0032:  BCF    03.5
0033:  BCF    06.1
....................       output_high(pin_b2); 
0034:  BSF    03.5
0035:  BCF    06.2
0036:  BCF    03.5
0037:  BSF    06.2
....................       output_low(pin_b3); 
0038:  BSF    03.5
0039:  BCF    06.3
003A:  BCF    03.5
003B:  BCF    06.3
....................       delay_ms(500); 
003C:  MOVLW  02
003D:  MOVWF  21
003E:  MOVLW  FA
003F:  MOVWF  22
0040:  CALL   004
0041:  DECFSZ 21,F
0042:  GOTO   03E
.................... // 
....................       output_high(pin_b0);  
0043:  BSF    03.5
0044:  BCF    06.0
0045:  BCF    03.5
0046:  BSF    06.0
....................       output_low(pin_b1);  
0047:  BSF    03.5
0048:  BCF    06.1
0049:  BCF    03.5
004A:  BCF    06.1
....................       output_low(pin_b2); 
004B:  BSF    03.5
004C:  BCF    06.2
004D:  BCF    03.5
004E:  BCF    06.2
....................       output_high(pin_b3); 
004F:  BSF    03.5
0050:  BCF    06.3
0051:  BCF    03.5
0052:  BSF    06.3
....................       delay_ms(500); 
0053:  MOVLW  02
0054:  MOVWF  21
0055:  MOVLW  FA
0056:  MOVWF  22
0057:  CALL   004
0058:  DECFSZ 21,F
0059:  GOTO   055
.................... // 
....................       output_low(pin_b0); 
005A:  BSF    03.5
005B:  BCF    06.0
005C:  BCF    03.5
005D:  BCF    06.0
....................       output_high(pin_b1);  
005E:  BSF    03.5
005F:  BCF    06.1
0060:  BCF    03.5
0061:  BSF    06.1
....................       output_low(pin_b2); 
0062:  BSF    03.5
0063:  BCF    06.2
0064:  BCF    03.5
0065:  BCF    06.2
....................       output_high(pin_b3); 
0066:  BSF    03.5
0067:  BCF    06.3
0068:  BCF    03.5
0069:  BSF    06.3
....................       delay_ms(500); 
006A:  MOVLW  02
006B:  MOVWF  21
006C:  MOVLW  FA
006D:  MOVWF  22
006E:  CALL   004
006F:  DECFSZ 21,F
0070:  GOTO   06C
.................... // 
....................       output_low(pin_b0); 
0071:  BSF    03.5
0072:  BCF    06.0
0073:  BCF    03.5
0074:  BCF    06.0
....................       output_high(pin_b1);  
0075:  BSF    03.5
0076:  BCF    06.1
0077:  BCF    03.5
0078:  BSF    06.1
....................       output_high(pin_b2); 
0079:  BSF    03.5
007A:  BCF    06.2
007B:  BCF    03.5
007C:  BSF    06.2
....................       output_low(pin_b3); 
007D:  BSF    03.5
007E:  BCF    06.3
007F:  BCF    03.5
0080:  BCF    06.3
....................       delay_ms(500); 
0081:  MOVLW  02
0082:  MOVWF  21
0083:  MOVLW  FA
0084:  MOVWF  22
0085:  CALL   004
0086:  DECFSZ 21,F
0087:  GOTO   083
.................... // 
....................     }                    
0088:  GOTO   099
....................                      
....................  
....................  
....................    else                  
....................      {                    
....................       output_low(pin_b0); 
0089:  BSF    03.5
008A:  BCF    06.0
008B:  BCF    03.5
008C:  BCF    06.0
....................       output_low(pin_b1);  
008D:  BSF    03.5
008E:  BCF    06.1
008F:  BCF    03.5
0090:  BCF    06.1
....................       output_low(pin_b2); 
0091:  BSF    03.5
0092:  BCF    06.2
0093:  BCF    03.5
0094:  BCF    06.2
....................       output_low(pin_b3); 
0095:  BSF    03.5
0096:  BCF    06.3
0097:  BCF    03.5
0098:  BCF    06.3
....................      } 
....................  
.................... }while(true); 
0099:  BSF    03.5
009A:  GOTO   028
.................... } 
009B:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
