CCS PCM C Compiler, Version 5.008, 5967               23-feb-15 18:39

               Filename:   E:\Dropbox\Blogger\Step Motor\Unipolar\CCS\Unipolar.lst

               ROM used:   444 words (5%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS,NOWDT,NOPUT,NOPROTECT 
.................... #use standard_io(b) 
.................... #use delay(clock=4M)//especifica los 4Mhz del cristal de cuarzo 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................    set_tris_a(00111); 
0024:  MOVLW  49
0025:  MOVWF  05
....................    set_tris_b(00000000); 
0026:  MOVLW  00
0027:  MOVWF  06
....................  
....................  
.................... do{ 
....................           
....................    if(input(PIN_A0)==1)    ///Paso Normal          
0028:  BSF    05.0
0029:  BCF    03.5
002A:  BTFSS  05.0
002B:  GOTO   089
....................      {                                      
....................       output_high(pin_b0); 
002C:  BSF    03.5
002D:  BCF    06.0
002E:  BCF    03.5
002F:  BSF    06.0
....................       output_high(pin_b1);  
0030:  BSF    03.5
0031:  BCF    06.1
0032:  BCF    03.5
0033:  BSF    06.1
....................       output_low(pin_b2); 
0034:  BSF    03.5
0035:  BCF    06.2
0036:  BCF    03.5
0037:  BCF    06.2
....................       output_low(pin_b3); 
0038:  BSF    03.5
0039:  BCF    06.3
003A:  BCF    03.5
003B:  BCF    06.3
....................       delay_ms(500); 
003C:  MOVLW  02
003D:  MOVWF  21
003E:  MOVLW  FA
003F:  MOVWF  22
0040:  CALL   004
0041:  DECFSZ 21,F
0042:  GOTO   03E
.................... // 
....................       output_low(pin_b0); 
0043:  BSF    03.5
0044:  BCF    06.0
0045:  BCF    03.5
0046:  BCF    06.0
....................       output_high(pin_b1);  
0047:  BSF    03.5
0048:  BCF    06.1
0049:  BCF    03.5
004A:  BSF    06.1
....................       output_high(pin_b2); 
004B:  BSF    03.5
004C:  BCF    06.2
004D:  BCF    03.5
004E:  BSF    06.2
....................       output_low(pin_b3); 
004F:  BSF    03.5
0050:  BCF    06.3
0051:  BCF    03.5
0052:  BCF    06.3
....................       delay_ms(500); 
0053:  MOVLW  02
0054:  MOVWF  21
0055:  MOVLW  FA
0056:  MOVWF  22
0057:  CALL   004
0058:  DECFSZ 21,F
0059:  GOTO   055
.................... // 
....................       output_low(pin_b0); 
005A:  BSF    03.5
005B:  BCF    06.0
005C:  BCF    03.5
005D:  BCF    06.0
....................       output_low(pin_b1);  
005E:  BSF    03.5
005F:  BCF    06.1
0060:  BCF    03.5
0061:  BCF    06.1
....................       output_high(pin_b2); 
0062:  BSF    03.5
0063:  BCF    06.2
0064:  BCF    03.5
0065:  BSF    06.2
....................       output_high(pin_b3); 
0066:  BSF    03.5
0067:  BCF    06.3
0068:  BCF    03.5
0069:  BSF    06.3
....................       delay_ms(500); 
006A:  MOVLW  02
006B:  MOVWF  21
006C:  MOVLW  FA
006D:  MOVWF  22
006E:  CALL   004
006F:  DECFSZ 21,F
0070:  GOTO   06C
.................... // 
....................       output_high(pin_b0); 
0071:  BSF    03.5
0072:  BCF    06.0
0073:  BCF    03.5
0074:  BSF    06.0
....................       output_low(pin_b1);  
0075:  BSF    03.5
0076:  BCF    06.1
0077:  BCF    03.5
0078:  BCF    06.1
....................       output_low(pin_b2); 
0079:  BSF    03.5
007A:  BCF    06.2
007B:  BCF    03.5
007C:  BCF    06.2
....................       output_high(pin_b3); 
007D:  BSF    03.5
007E:  BCF    06.3
007F:  BCF    03.5
0080:  BSF    06.3
....................       delay_ms(500); 
0081:  MOVLW  02
0082:  MOVWF  21
0083:  MOVLW  FA
0084:  MOVWF  22
0085:  CALL   004
0086:  DECFSZ 21,F
0087:  GOTO   083
.................... // 
....................      }                    
0088:  GOTO   1B9
....................                      
....................    else if(input(PIN_A1)==1)   ///Wave Drive           
0089:  BSF    03.5
008A:  BSF    05.1
008B:  BCF    03.5
008C:  BTFSS  05.1
008D:  GOTO   0EB
....................      {                                      
....................       output_low(pin_b0); 
008E:  BSF    03.5
008F:  BCF    06.0
0090:  BCF    03.5
0091:  BCF    06.0
....................       output_low(pin_b1);  
0092:  BSF    03.5
0093:  BCF    06.1
0094:  BCF    03.5
0095:  BCF    06.1
....................       output_low(pin_b2); 
0096:  BSF    03.5
0097:  BCF    06.2
0098:  BCF    03.5
0099:  BCF    06.2
....................       output_high(pin_b3); 
009A:  BSF    03.5
009B:  BCF    06.3
009C:  BCF    03.5
009D:  BSF    06.3
....................       delay_ms(500); 
009E:  MOVLW  02
009F:  MOVWF  21
00A0:  MOVLW  FA
00A1:  MOVWF  22
00A2:  CALL   004
00A3:  DECFSZ 21,F
00A4:  GOTO   0A0
.................... // 
....................       output_low(pin_b0); 
00A5:  BSF    03.5
00A6:  BCF    06.0
00A7:  BCF    03.5
00A8:  BCF    06.0
....................       output_low(pin_b1);  
00A9:  BSF    03.5
00AA:  BCF    06.1
00AB:  BCF    03.5
00AC:  BCF    06.1
....................       output_high(pin_b2); 
00AD:  BSF    03.5
00AE:  BCF    06.2
00AF:  BCF    03.5
00B0:  BSF    06.2
....................       output_low(pin_b3); 
00B1:  BSF    03.5
00B2:  BCF    06.3
00B3:  BCF    03.5
00B4:  BCF    06.3
....................       delay_ms(500); 
00B5:  MOVLW  02
00B6:  MOVWF  21
00B7:  MOVLW  FA
00B8:  MOVWF  22
00B9:  CALL   004
00BA:  DECFSZ 21,F
00BB:  GOTO   0B7
.................... // 
....................       output_low(pin_b0); 
00BC:  BSF    03.5
00BD:  BCF    06.0
00BE:  BCF    03.5
00BF:  BCF    06.0
....................       output_high(pin_b1);  
00C0:  BSF    03.5
00C1:  BCF    06.1
00C2:  BCF    03.5
00C3:  BSF    06.1
....................       output_low(pin_b2); 
00C4:  BSF    03.5
00C5:  BCF    06.2
00C6:  BCF    03.5
00C7:  BCF    06.2
....................       output_low(pin_b3); 
00C8:  BSF    03.5
00C9:  BCF    06.3
00CA:  BCF    03.5
00CB:  BCF    06.3
....................       delay_ms(500); 
00CC:  MOVLW  02
00CD:  MOVWF  21
00CE:  MOVLW  FA
00CF:  MOVWF  22
00D0:  CALL   004
00D1:  DECFSZ 21,F
00D2:  GOTO   0CE
.................... // 
....................       output_high(pin_b0); 
00D3:  BSF    03.5
00D4:  BCF    06.0
00D5:  BCF    03.5
00D6:  BSF    06.0
....................       output_low(pin_b1);  
00D7:  BSF    03.5
00D8:  BCF    06.1
00D9:  BCF    03.5
00DA:  BCF    06.1
....................       output_low(pin_b2); 
00DB:  BSF    03.5
00DC:  BCF    06.2
00DD:  BCF    03.5
00DE:  BCF    06.2
....................       output_low(pin_b3); 
00DF:  BSF    03.5
00E0:  BCF    06.3
00E1:  BCF    03.5
00E2:  BCF    06.3
....................       delay_ms(500); 
00E3:  MOVLW  02
00E4:  MOVWF  21
00E5:  MOVLW  FA
00E6:  MOVWF  22
00E7:  CALL   004
00E8:  DECFSZ 21,F
00E9:  GOTO   0E5
.................... // 
....................     } 
00EA:  GOTO   1B9
....................  
.................... else if(input(PIN_A2)==1)              
00EB:  BSF    03.5
00EC:  BSF    05.2
00ED:  BCF    03.5
00EE:  BTFSS  05.2
00EF:  GOTO   1A9
....................    {                                      
....................       output_low(pin_b0); 
00F0:  BSF    03.5
00F1:  BCF    06.0
00F2:  BCF    03.5
00F3:  BCF    06.0
....................       output_low(pin_b1);  
00F4:  BSF    03.5
00F5:  BCF    06.1
00F6:  BCF    03.5
00F7:  BCF    06.1
....................       output_low(pin_b2); 
00F8:  BSF    03.5
00F9:  BCF    06.2
00FA:  BCF    03.5
00FB:  BCF    06.2
....................       output_high(pin_b3); 
00FC:  BSF    03.5
00FD:  BCF    06.3
00FE:  BCF    03.5
00FF:  BSF    06.3
....................       delay_ms(500); 
0100:  MOVLW  02
0101:  MOVWF  21
0102:  MOVLW  FA
0103:  MOVWF  22
0104:  CALL   004
0105:  DECFSZ 21,F
0106:  GOTO   102
.................... // 
....................       output_low(pin_b0); 
0107:  BSF    03.5
0108:  BCF    06.0
0109:  BCF    03.5
010A:  BCF    06.0
....................       output_low(pin_b1);  
010B:  BSF    03.5
010C:  BCF    06.1
010D:  BCF    03.5
010E:  BCF    06.1
....................       output_high(pin_b2); 
010F:  BSF    03.5
0110:  BCF    06.2
0111:  BCF    03.5
0112:  BSF    06.2
....................       output_high(pin_b3); 
0113:  BSF    03.5
0114:  BCF    06.3
0115:  BCF    03.5
0116:  BSF    06.3
....................       delay_ms(500); 
0117:  MOVLW  02
0118:  MOVWF  21
0119:  MOVLW  FA
011A:  MOVWF  22
011B:  CALL   004
011C:  DECFSZ 21,F
011D:  GOTO   119
.................... // 
....................       output_low(pin_b0); 
011E:  BSF    03.5
011F:  BCF    06.0
0120:  BCF    03.5
0121:  BCF    06.0
....................       output_low(pin_b1);  
0122:  BSF    03.5
0123:  BCF    06.1
0124:  BCF    03.5
0125:  BCF    06.1
....................       output_high(pin_b2); 
0126:  BSF    03.5
0127:  BCF    06.2
0128:  BCF    03.5
0129:  BSF    06.2
....................       output_low(pin_b3); 
012A:  BSF    03.5
012B:  BCF    06.3
012C:  BCF    03.5
012D:  BCF    06.3
....................       delay_ms(500); 
012E:  MOVLW  02
012F:  MOVWF  21
0130:  MOVLW  FA
0131:  MOVWF  22
0132:  CALL   004
0133:  DECFSZ 21,F
0134:  GOTO   130
.................... // 
....................       output_low(pin_b0); 
0135:  BSF    03.5
0136:  BCF    06.0
0137:  BCF    03.5
0138:  BCF    06.0
....................       output_high(pin_b1);  
0139:  BSF    03.5
013A:  BCF    06.1
013B:  BCF    03.5
013C:  BSF    06.1
....................       output_high(pin_b2); 
013D:  BSF    03.5
013E:  BCF    06.2
013F:  BCF    03.5
0140:  BSF    06.2
....................       output_low(pin_b3); 
0141:  BSF    03.5
0142:  BCF    06.3
0143:  BCF    03.5
0144:  BCF    06.3
....................       delay_ms(500); 
0145:  MOVLW  02
0146:  MOVWF  21
0147:  MOVLW  FA
0148:  MOVWF  22
0149:  CALL   004
014A:  DECFSZ 21,F
014B:  GOTO   147
.................... // 
....................       output_low(pin_b0); 
014C:  BSF    03.5
014D:  BCF    06.0
014E:  BCF    03.5
014F:  BCF    06.0
....................       output_high(pin_b1);  
0150:  BSF    03.5
0151:  BCF    06.1
0152:  BCF    03.5
0153:  BSF    06.1
....................       output_low(pin_b2); 
0154:  BSF    03.5
0155:  BCF    06.2
0156:  BCF    03.5
0157:  BCF    06.2
....................       output_low(pin_b3); 
0158:  BSF    03.5
0159:  BCF    06.3
015A:  BCF    03.5
015B:  BCF    06.3
....................       delay_ms(500); 
015C:  MOVLW  02
015D:  MOVWF  21
015E:  MOVLW  FA
015F:  MOVWF  22
0160:  CALL   004
0161:  DECFSZ 21,F
0162:  GOTO   15E
.................... // 
....................       output_high(pin_b0); 
0163:  BSF    03.5
0164:  BCF    06.0
0165:  BCF    03.5
0166:  BSF    06.0
....................       output_high(pin_b1);  
0167:  BSF    03.5
0168:  BCF    06.1
0169:  BCF    03.5
016A:  BSF    06.1
....................       output_low(pin_b2); 
016B:  BSF    03.5
016C:  BCF    06.2
016D:  BCF    03.5
016E:  BCF    06.2
....................       output_low(pin_b3); 
016F:  BSF    03.5
0170:  BCF    06.3
0171:  BCF    03.5
0172:  BCF    06.3
....................       delay_ms(500); 
0173:  MOVLW  02
0174:  MOVWF  21
0175:  MOVLW  FA
0176:  MOVWF  22
0177:  CALL   004
0178:  DECFSZ 21,F
0179:  GOTO   175
.................... // 
....................       output_high(pin_b0); 
017A:  BSF    03.5
017B:  BCF    06.0
017C:  BCF    03.5
017D:  BSF    06.0
....................       output_low(pin_b1);  
017E:  BSF    03.5
017F:  BCF    06.1
0180:  BCF    03.5
0181:  BCF    06.1
....................       output_low(pin_b2); 
0182:  BSF    03.5
0183:  BCF    06.2
0184:  BCF    03.5
0185:  BCF    06.2
....................       output_low(pin_b3); 
0186:  BSF    03.5
0187:  BCF    06.3
0188:  BCF    03.5
0189:  BCF    06.3
....................       delay_ms(500); 
018A:  MOVLW  02
018B:  MOVWF  21
018C:  MOVLW  FA
018D:  MOVWF  22
018E:  CALL   004
018F:  DECFSZ 21,F
0190:  GOTO   18C
.................... // 
....................       output_high(pin_b0); 
0191:  BSF    03.5
0192:  BCF    06.0
0193:  BCF    03.5
0194:  BSF    06.0
....................       output_low(pin_b1);  
0195:  BSF    03.5
0196:  BCF    06.1
0197:  BCF    03.5
0198:  BCF    06.1
....................       output_low(pin_b2); 
0199:  BSF    03.5
019A:  BCF    06.2
019B:  BCF    03.5
019C:  BCF    06.2
....................       output_high(pin_b3); 
019D:  BSF    03.5
019E:  BCF    06.3
019F:  BCF    03.5
01A0:  BSF    06.3
....................       delay_ms(500); 
01A1:  MOVLW  02
01A2:  MOVWF  21
01A3:  MOVLW  FA
01A4:  MOVWF  22
01A5:  CALL   004
01A6:  DECFSZ 21,F
01A7:  GOTO   1A3
.................... // 
....................      } 
01A8:  GOTO   1B9
....................  
....................    else                  
....................      {                    
....................       output_low(pin_b0); 
01A9:  BSF    03.5
01AA:  BCF    06.0
01AB:  BCF    03.5
01AC:  BCF    06.0
....................       output_low(pin_b1);  
01AD:  BSF    03.5
01AE:  BCF    06.1
01AF:  BCF    03.5
01B0:  BCF    06.1
....................       output_low(pin_b2); 
01B1:  BSF    03.5
01B2:  BCF    06.2
01B3:  BCF    03.5
01B4:  BCF    06.2
....................       output_low(pin_b3); 
01B5:  BSF    03.5
01B6:  BCF    06.3
01B7:  BCF    03.5
01B8:  BCF    06.3
....................      } 
....................  
.................... }while(true); 
01B9:  BSF    03.5
01BA:  GOTO   028
.................... } 
....................  
01BB:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
